[tox]
skipsdist = True
{%- if cookiecutter.use_pytest == "y" %}
envlist = format,lint,test,pre-commit
{%- elif cookiecutter.use_pytest == "n" -%}
envlist = format,lint,pre-commit
{%- endif %}

isolated_build = True

[testenv]
basepython =
    {env:TOXPYTHON:python}

# Cleanup tasks
[testenv:clean]
skip_install = true
deps =
    coverage
commands =
    python -m coverage erase
    sh -c "rm -rf build cover dist .hypothesis .mypy_cache .pytest_cache site"

# Auto Formatting
[testenv:format]
skip_install = true
deps =
    autoflake
    black
    isort
commands =
    python -m autoflake src tests
    python -m black src tests
    python -m isort src tests

# Syntax Checks
[testenv:lint]
skip_install = true
deps =
    black
    flake8
    isort
    mypy
commands =
    python -m black src tests --check
    python -m flake8 src tests
    python -m isort src tests --check-only
    python -m mypy src

# Pre-Commit
[testenv:pre-commit]
skip_install = true
deps =
    pre-commit
commands =
    pre-commit run --all-files --show-diff-on-failure

{%- if cookiecutter.use_pytest == "y" %}
[pytest-config]
posargs =
    --cov-report xml:cover/coverage-BUILD_{env:BUILD_NUMBER:0}.xml
    --junitxml=cover/xunit-result-BUILD_{env:BUILD_NUMBER:0}.xml

[testenv:test]
skip_install = true
deps =
    pytest
    pytest-cov
commands =
    python -m pytest
{%- endif %}